-- 자신이 사용할 계정 만들고 등록하기 ( system 계정에서 생성해야 된다. )
-- 주석처리(--)
    -- 1. 계정 생성 명령 : create user c##계정명 identified by 비밀번호 ; ( 예약어 사용 )
        create user c##ictedu identified by 1111;
        -- 범위잡고 좌상단 초록색 재생 버튼 클릭 ( 명령문 실행 )
    
    -- 2. 권한 부여 명령 : grant connect, resource, dba to c##계정명 ;
        grant connect, resource, dba to c##ictedu;
        
--  계정 등록 : 좌상단 접속 + 버튼 클릭 
    
    -- Name : ictedu 계정 

	-- 사용자 이름 : c##ictedu 
	-- 비밀번호 : 1111 
	-- 비밀번호 저장 체크 ( 현업에서는 X , 까먹으면 안되기 때문에 )

	-- 호스트 이름 : localhost - 자기 자신 컴퓨터 ( 현업에서는 서버 주소 )
	-- 포트 : 1521	
	-- SID : xe - 교육용 ( 현업에서는 서비스 이름 사용 )

	-- 테스트 클릭 > 성공 > 접속 클릭 > 서비스 준비완료
    
    ----------------------------------------------------------
    
    -- SQL(Structured Query Language) : 구조화된 질의어
    --  : 데이터베이스에서 데이터를 추출하고 조작하는데 사용되는 데이터 처리 언어
    
    --      1) 데이터 정의어(DDL) : 데이터베이스 객체들을 정의하는 것
    --                           데이터베이스 객체 (테이블, 뷰, 인덱스, 시퀀스 등) 
    --              create : 새로운 데이터베이스 객체 생성 ( create 객체 )
    --              drop : 기존의 데이터베이스 객체 삭제 ( drop 객체 )
    --              alter : 기존의 데이터베이스 객체를 변경 ( alter 객체 )
    
    --      2) 데이터 조작어(DML) : 데이터 값 자체를 삽입, 삭제, 변경, 검색할 때 사용
    --                          **데이터(행=튜플=레코드)
    --              insert : 데이터 삽입(생성)
    --              delete : 데이터 삭제
    --              update : 데이터 변경(수정)
    --              **select : 데이터 검색
   
    --      3) 데이터 제어어(DCL) : 데이터베이스에 접근하고 객체들을 사용하도록 권한을 부여, 해제하는 명령어
    --              grant : 권한 부여
    --              revoke : 권한 해제
    --              **commit : 현재 데이터베이스 상태를 저장
    --              **rollback : 현재상태 이후 변경된 사항을 취소하고 현재상태로 되돌리는 것
    --              (현재상태(commit)저장 - 1 진행 - 2 진행 - rollback을 하면 현재상태로 되돌아간다.)
    
    ---------------------------------------------------------------------------------------------------
    
    --  < 오라클 데이터타입 >
    --  1. 문자열 (홑따옴표 '' 사용)
    --      : 숫자, 대소문자 => 1 byte / 나머지 문자 => 3 byte
    --      char(크기) : 고정길이, 2000 byte 까지 저장
    --      **varchar2(크기) : 가변길이, 4000 byte 까지 저장
    --      long(크기) : 가변길이, 2GB
    --      *clob(크기) : 가변길이, 대용량 테스트 최대 4GB
      
    --  2. 숫자 
    --      number() : 가변길이, 38자리까지 부동소숫점
    --      **number(7) : 정수 7자리
    --      **number(7, 3) : 전체 7자리에서, 소수점 3자리 
    --                   (즉, 정수 4자리 + 소수점아래 3자리 = 전체 7자리)
    
    --  3. 날짜 (홑따옴표 '' 사용) , (숫자와 연산가능 +, -)
    --      date : 고정길이, 날짜-시간 형식을 저장 , date('2024/01/30')
    --      timestamp : 기본 날짜형을 확장한 자료형 
    --      **sysdate(명령어) : 현재 시스템 날짜를 말한다.
    
    --  4. 그래픽, 이미지, 동영상의 데이터는 blob(이진 대용량 객체)를 주로 사용한다.( 거의 사용안함 )
    
    
    --  < 오라클 테이블 생성시 제약조건 >
    --  1. not null : 널을 허용하지 않는다. 해당 속성은 데이터를 삽입할때 반드시 채워야된다.
    
    --  2. unique : 해당 속성 또는 속성 조합 값이 유일하도록 한다.(중복 불가)
    
    --  3. primary key : 기본키(각 행을 유일하게 식별할 수 있도록 하는 키) -> not null , unique
    
    --  4. default : 기본값을 지정하는 예약어 (즉, 값을 입력하지 않으면 초기값으로 채워진다.)
    
    --  5. check : 특정 속성에 대한 제약조건을 지정하는 것 (조건 지정)
    --             **AND 조건 이용하여 범위 지정 > 도메인(속성의 범위) 설정 가능
    
    
    --  데이터 정의어(DDL)
    --  < create 객체 >
    --  1. 테이블 생성 (**테이블에는 반드시 기본키가 있어야한다.)
    
    --      형식1) 기본키 하나만 지정 가능
    --      create table 테이블이름(
    --          컬럼명(속성이름) 데이터타입 not null primary key ,
    --          컬럼명(속성이름) 데이터타입 [제약조건],
    --          컬럼명(속성이름) 데이터타입 [제약조건]
    --      );
    
    --      형식2) 기본키 여러개 지정 가능 - primary key (속성이름, 속성이름)
    --      create table 테이블이름(
    --          컬럼명(속성이름) 데이터타입 [제약조건],
    --          컬럼명(속성이름) 데이터타입 [제약조건],
    --          컬럼명(속성이름) 데이터타입 [제약조건],
    --          primary key (속성이름 = 새로운 것이 아니라 위에 존재하는 속성이름)
    --      );
    
    --  < drop 객체 >
    --  2. 테이블 삭제 : 테이블 구조와 데이터 모두 삭제
    --               (**즉, 테이블 안에 데이터가 있어도 삭제된다.)
    
    --      형식) drop table 테이블이름 ;
    
    --  < alter 객체 >
    --  3. 테이블 구조 변경 : alter table 테이블이름
    --          컬럼 추가 ( add 컬럼명 자료형(크기) [제약조건] ) 
    --          컬럼 삭제 ( drop column 컬럼명 )
    --          컬럼 변경 ( modify 컬럼명 자료형(크기) [제약조건] ) 
    
    --  ** 테이블 구조보는 명령어 : desc 테이블이름 ;
  
    --          컬럼 추가 : alter table 테이블이름 add 컬럼명 자료형(크기) [제약조건] ;
    
    --          컬럼 삭제 : alter table 테이블이름 drop column 컬럼명 ;
    --                  데이터가 있어도 삭제됨
    --                  **만약에 삭제할 속성의 참조하는 다른 속성이 있으면 삭제 안됨
    
    --          컬럼 변경 : alter table 테이블이름 modify 컬럼명 자료형(크기) [제약조건] ;
    --              1) 데이터가 없을 경우 : 컬럼의 자료형과 크기를 마음대로 변경할 수 있다.
    --              2) 데이터가 있는 경우(같은 자료형) : 크기 변환은 가능 
    --                 (단, 기존에 있던 데이터 중 가장 큰 데이터의 크기보다는 커야된다.)
    --              3) 데이터가 있는 경우(다른 자료형) : 비추천
                                
    
    --  **테이블 복사 (key는 복사 불가능)
    --      1) 구조와 데이터를 모두 복사하기
    --          create table 새로운 테이블이름 as select * from 원본 테이블이름
    --      2) 구조만 복사하는 경우
    --          create table 새로운 테이블이름 as select * from 원본 테이블이름 where 1 = 0 ;
    
    
    --  데이터 조작어(DML)
    --  < insert into ~ values >
    --  1. 테이블 삽입 : 튜플 = 레코드 = 행 을 삽입
    
    --          방법1) insert into 테이블이름(컬럼명, 컬럼명, 컬럼명, 컬럼명)
    --                values(데이터, 데이터, 데이터, 데이터)
    --                  **컬럼명과 데이터는 순서대로 1:1 매칭
    --                  **컬럼명을 입력할때는 반드시 제약조건이 not null을 가진 컬럼은 데이터를 넣어줘야한다.
    
    --          방법2) insert into 테이블이름
    --                values(데이터, 데이터, 데이터, 데이터) 
    --                  **해당 테이블의 모든 컬럼에 맞춰 순서대로 데이터를 넣어줘야 한다.
    --                      (즉, 컬럼 개수만큼 데이터를 넣어주어야한다.)
    
    --          방법3) 일부 데이터만 넣기 (단, not null 은 반드시 넣어야한다.)
    --                  - insert into 테이블이름() value() 
    --                    1:1 매칭이기 때문에 순서 상관없다.(not null만 반드시 넣으면 된다.)
    
    --                  - insert into 테이블이름 value()
    --                    순서 상관있다. 정보가 없는 컬럼위치에는 null 을 입력한다.
    ---------------------------------------------------------------------------------------------------

    
    
    
    
    
    